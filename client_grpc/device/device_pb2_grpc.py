# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..device import device_pb2 as device_dot_device__pb2


class RouteGuideStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeviceStatus = channel.stream_stream(
                '/device.RouteGuide/GetDeviceStatus',
                request_serializer=device_dot_device__pb2.DeviceId.SerializeToString,
                response_deserializer=device_dot_device__pb2.DeviceStatus.FromString,
                )
        self.GetDeviceConfig = channel.unary_unary(
                '/device.RouteGuide/GetDeviceConfig',
                request_serializer=device_dot_device__pb2.DeviceId.SerializeToString,
                response_deserializer=device_dot_device__pb2.DeviceConfig.FromString,
                )
        self.SetDeviceConfig = channel.unary_unary(
                '/device.RouteGuide/SetDeviceConfig',
                request_serializer=device_dot_device__pb2.DeviceConfig.SerializeToString,
                response_deserializer=device_dot_device__pb2.ReturnValue.FromString,
                )


class RouteGuideServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDeviceStatus(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouteGuideServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeviceStatus': grpc.stream_stream_rpc_method_handler(
                    servicer.GetDeviceStatus,
                    request_deserializer=device_dot_device__pb2.DeviceId.FromString,
                    response_serializer=device_dot_device__pb2.DeviceStatus.SerializeToString,
            ),
            'GetDeviceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceConfig,
                    request_deserializer=device_dot_device__pb2.DeviceId.FromString,
                    response_serializer=device_dot_device__pb2.DeviceConfig.SerializeToString,
            ),
            'SetDeviceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceConfig,
                    request_deserializer=device_dot_device__pb2.DeviceConfig.FromString,
                    response_serializer=device_dot_device__pb2.ReturnValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'device.RouteGuide', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RouteGuide(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDeviceStatus(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/device.RouteGuide/GetDeviceStatus',
            device_dot_device__pb2.DeviceId.SerializeToString,
            device_dot_device__pb2.DeviceStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device.RouteGuide/GetDeviceConfig',
            device_dot_device__pb2.DeviceId.SerializeToString,
            device_dot_device__pb2.DeviceConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device.RouteGuide/SetDeviceConfig',
            device_dot_device__pb2.DeviceConfig.SerializeToString,
            device_dot_device__pb2.ReturnValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
